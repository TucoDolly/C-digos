-- #####################################################################
-- # Script de Criação do Banco de Dados para o Sistema de Vendas
-- #####################################################################

-- Apaga as tabelas se elas já existirem, para permitir a recriação limpa (opcional)
DROP TABLE IF EXISTS ITEM_PEDIDO;
DROP TABLE IF EXISTS PEDIDO;
DROP TABLE IF EXISTS PRODUTO;
DROP TABLE IF EXISTS CLIENTE;
DROP TABLE IF EXISTS CATEGORIA;


-- Tabela: CATEGORIA
-- Armazena as categorias dos produtos.
-- Ex: Eletrônicos, Livros, Vestuário.
CREATE TABLE CATEGORIA (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL UNIQUE -- O nome da categoria deve ser único
);

-- Tabela: CLIENTE
-- Armazena os dados dos clientes.
CREATE TABLE CLIENTE (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    data_cadastro DATE NOT NULL DEFAULT CURRENT_DATE
);

-- Tabela: PRODUTO
-- Contém os detalhes dos produtos e a chave estrangeira (id_categoria)
-- que a relaciona com a tabela CATEGORIA.
CREATE TABLE PRODUTO (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL CHECK (preco > 0), -- Garante que o preço seja positivo
    id_categoria INT NOT NULL,
    CONSTRAINT fk_categoria
        FOREIGN KEY(id_categoria) 
        REFERENCES CATEGORIA(id)
        ON DELETE RESTRICT -- Impede que uma categoria seja deletada se houver produtos nela
);

-- Tabela: PEDIDO
-- Armazena os cabeçalhos dos pedidos, cada um associado a um cliente
-- através da chave estrangeira id_cliente.
CREATE TABLE PEDIDO (
    numero SERIAL PRIMARY KEY,
    data TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Melhor usar TIMESTAMPTZ
    id_cliente INT NOT NULL,
    CONSTRAINT fk_cliente
        FOREIGN KEY(id_cliente) 
        REFERENCES CLIENTE(id)
        ON DELETE CASCADE -- Se o cliente for deletado, seus pedidos também serão
);

-- Tabela de Junção: ITEM_PEDIDO
-- Resolve o relacionamento muitos-para-muitos entre PEDIDO e PRODUTO.
-- Armazena quais produtos estão em cada pedido e a sua respectiva quantidade.
CREATE TABLE ITEM_PEDIDO (
    numero_pedido INT NOT NULL,
    id_produto INT NOT NULL,
    quantidade INT NOT NULL CHECK (quantidade > 0), -- Garante que a quantidade seja positiva
    CONSTRAINT pk_item_pedido 
        PRIMARY KEY (numero_pedido, id_produto), -- Chave primária composta
    CONSTRAINT fk_pedido
        FOREIGN KEY (numero_pedido) 
        REFERENCES PEDIDO(numero)
        ON DELETE CASCADE, -- Se o pedido for deletado, seus itens também serão
    CONSTRAINT fk_produto
        FOREIGN KEY (id_produto) 
        REFERENCES PRODUTO(id)
        ON DELETE RESTRICT -- Impede que um produto seja deletado se estiver em algum pedido
);

-- #####################################################################
-- # Fim do Script
-- #####################################################################
